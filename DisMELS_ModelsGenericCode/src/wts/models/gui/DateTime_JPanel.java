/*
 * DateTime_JPanel.java
 *
 * Created on March 2, 2006, 2:28 PM
 */

package wts.models.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import wts.models.utilities.DateTime;

/**
 *
 * @author  William Stockhausen
 */
public class DateTime_JPanel extends javax.swing.JPanel {
    //Static fields
    public static final String PROP_Year = "year";
    public static final String PROP_Mon  = "month";
    public static final String PROP_Day  = "day";
    public static final String PROP_Hour = "hour";
    public static final String PROP_Min  = "minute";
    public static final String PROP_Sec  = "second";    
    public static final String PROP_editable = "editable";
    public static final String PROP_enabled  = "enabled";
    
    private boolean editable = true;
    private boolean enabled  = true;
    private int year  = 1968;
    private int month = 5;
    private int day   = 23;
    private int hour  = 0;
    private int min   = 0;
    private int sec   = 0;
    
    /** Creates new form DateTime_JPanel */
    public DateTime_JPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfYear = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfMonth = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfDay = new javax.swing.JTextField();
        jtfHour = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfMin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfSec = new javax.swing.JTextField();

        jtfYear.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfYear.setText("0000");
        jtfYear.setToolTipText("year");
        jtfYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        jLabel1.setText("/");
        jLabel1.setMaximumSize(new java.awt.Dimension(2, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(2, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(2, 14));
        jLabel1.setRequestFocusEnabled(false);

        jtfMonth.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfMonth.setText("00");
        jtfMonth.setToolTipText("month (1-12)");
        jtfMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        jLabel2.setText("/");
        jLabel2.setMaximumSize(new java.awt.Dimension(2, 14));
        jLabel2.setMinimumSize(new java.awt.Dimension(2, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(2, 14));
        jLabel2.setRequestFocusEnabled(false);

        jtfDay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfDay.setText("00");
        jtfDay.setToolTipText("day");
        jtfDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        jtfHour.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfHour.setText("00");
        jtfHour.setToolTipText("hour (1-23)");
        jtfHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        jLabel3.setText(":");

        jtfMin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfMin.setText("00");
        jtfMin.setToolTipText("minutes");
        jtfMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        jLabel4.setText(":");

        jtfSec.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfSec.setText("00");
        jtfSec.setToolTipText("seconds");
        jtfSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTime_JPanel.this.actionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jtfYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfMonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfDay, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(17, 17, 17)
                .add(jtfHour, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfMin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtfSec, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
            .add(jtfYear, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jtfMonth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jtfDay, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jtfHour, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jLabel3)
            .add(jtfMin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(jLabel4)
            .add(jtfSec, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPerformed
        fireActionPerformed();
    }//GEN-LAST:event_actionPerformed
    
    public boolean getEditable() {
        return editable;
    }
    
    public void setEditable(boolean b) {
        boolean oldVal = editable;
        editable = b;
        jtfYear.setEditable(b);
        jtfMonth.setEditable(b);
        jtfDay.setEditable(b);
        jtfHour.setEditable(b);
        jtfMin.setEditable(b);
        jtfSec.setEditable(b);
        firePropertyChange(PROP_editable,oldVal,editable);
    }
    
    public boolean getEnabled() {
        return enabled;
    }
    
    @Override
    public void setEnabled(boolean b) {
        boolean oldVal = enabled;
        enabled = b;
        jtfYear.setEnabled(b);
        jtfMonth.setEnabled(b);
        jtfDay.setEnabled(b);
        jtfHour.setEnabled(b);
        jtfMin.setEnabled(b);
        jtfSec.setEnabled(b);
        firePropertyChange(PROP_enabled,oldVal,enabled);
    }
    
    public wts.models.utilities.DateTime getDate() {
        DateTime date = new DateTime();
        date.year  = getYear();
        date.month = getMonth();
        date.dom   = getDay();
        date.doy   = -1; //not set
        date.hour  = getHour();
        date.min   = getMinute();
        date.sec   = getSecond();
        return date;
    }
    
    public void setDate(wts.models.utilities.DateTime date) {
        setYear(date.year);
        setMonth(date.month);
        setDay(date.dom);
        setHour(date.hour);
        setMinute(date.min);
        setSecond(date.sec);
    }
    
    public int getYear() {
        int yr = Integer.parseInt(jtfYear.getText());
        return yr;
    }
    
    public void setYear(int val) {
        int oldVal = year;
        year = val;
        firePropertyChange(PROP_Year,oldVal,val);
        jtfYear.setText(Integer.toString(val));
    }
    
    public int getMonth() {
        int val = Integer.parseInt(jtfMonth.getText());
        return val;
    }
    
    public void setMonth(int val) {
        int oldVal = month;
        month = val;
        firePropertyChange(PROP_Mon,oldVal,val);
        jtfMonth.setText(Integer.toString(val));
    }
    
    public int getDay() {
        int val = Integer.parseInt(jtfDay.getText());
        return val;
    }
    
    public void setDay(int val) {
        int oldVal = day;
        day = val;
        firePropertyChange(PROP_Day,oldVal,val);
        jtfDay.setText(Integer.toString(val));
    }
    
    public int getHour() {
        int val = Integer.parseInt(jtfHour.getText());
        return val;
    }
    
    public void setHour(int val) {
        int oldVal = hour;
        hour = val;
        firePropertyChange(PROP_Hour,oldVal,val);
        jtfHour.setText(Integer.toString(val));
    }
    
    public int getMinute() {
        int val = Integer.parseInt(jtfMin.getText());
        return val;
    }
    
    public void setMinute(int val) {
        int oldVal = min;
        min = val;
        firePropertyChange(PROP_Min,oldVal,val);
        jtfMin.setText(Integer.toString(val));
    }
    
    public int getSecond() {
        int val = Integer.parseInt(jtfSec.getText());
        return val;
    }
    
    public void setSecond(int val) {
        int oldVal = sec;
        sec = val;
        firePropertyChange(PROP_Sec,oldVal,val);
        jtfSec.setText(Integer.toString(val));
    }

    /**
     * Adds the specified action listener to receive 
     * action events from this textfield.
     *
     * @param l the action listener to be added
     */ 
    public synchronized void addActionListener(ActionListener l) {
        listenerList.add(ActionListener.class, l);
    }

    /**
     * Removes the specified action listener so that it no longer
     * receives action events from this textfield.
     *
     * @param l the action listener to be removed
     */ 
    public synchronized void removeActionListener(ActionListener l) {
        listenerList.remove(ActionListener.class, l);
    }

    /**
     * Returns an array of all the <code>ActionListener</code>s added
     * to this JTextField with addActionListener().
     *
     * @return all of the <code>ActionListener</code>s added or an empty
     *         array if no listeners have been added
     * @since 1.4
     */
    public synchronized ActionListener[] getActionListeners() {
        return (ActionListener[])listenerList.getListeners(
                ActionListener.class);
    }

    /**
     * Notifies all listeners that have registered interest for
     * notification on this event type.  The event instance 
     * is lazily created.
     * The listener list is processed in last to
     * first order.
     * @see EventListenerList
     */
    protected void fireActionPerformed() {
        // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        int modifiers = 0;
        ActionEvent e =
            new ActionEvent(this, ActionEvent.ACTION_PERFORMED,null);
                            
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==ActionListener.class) {
                ((ActionListener)listeners[i+1]).actionPerformed(e);
            }          
        }
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jtfDay;
    private javax.swing.JTextField jtfHour;
    private javax.swing.JTextField jtfMin;
    private javax.swing.JTextField jtfMonth;
    private javax.swing.JTextField jtfSec;
    private javax.swing.JTextField jtfYear;
    // End of variables declaration//GEN-END:variables
    
}
