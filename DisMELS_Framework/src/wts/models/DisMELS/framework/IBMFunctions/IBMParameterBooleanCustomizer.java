/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wts.models.DisMELS.framework.IBMFunctions;

import java.beans.Customizer;

/**
 *
 * @author William.Stockhausen
 */
public class IBMParameterBooleanCustomizer extends javax.swing.JPanel 
                                              implements Customizer {

    /** property flag indicating change in value */
    public static final String VALUE_CHANGED = "value changed";
    
    /** local copy of model parameter */
    private IBMParameterBoolean ip = null;
    
    /**
     * Creates new form IBMParameterDoubleCustomizer
     */
    public IBMParameterBooleanCustomizer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel = new javax.swing.JLabel();
        jcbValue = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setMaximumSize(new java.awt.Dimension(32767, 22));
        setMinimumSize(new java.awt.Dimension(400, 27));

        jLabel.setText(org.openide.util.NbBundle.getMessage(IBMParameterBooleanCustomizer.class, "IBMParameterBooleanCustomizer.jLabel.text")); // NOI18N

        jcbValue.setText(org.openide.util.NbBundle.getMessage(IBMParameterBooleanCustomizer.class, "IBMParameterBooleanCustomizer.jcbValue.text")); // NOI18N
        jcbValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jcbValue.setPreferredSize(new java.awt.Dimension(149, 25));
        jcbValue.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbValueItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jcbValue, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jcbValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbValueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbValueItemStateChanged
        ip.setValue(jcbValue.isSelected());
    }//GEN-LAST:event_jcbValueItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel jLabel;
    protected javax.swing.JCheckBox jcbValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setObject(Object bean) {
        if (bean.getClass().equals(IBMParameterBoolean.class)) {
            ip = (IBMParameterBoolean) bean;
            jLabel.setText(ip.description);
            jLabel.setToolTipText(ip.name);
            jcbValue.setSelected(ip.getValue());
        }
    }
}
