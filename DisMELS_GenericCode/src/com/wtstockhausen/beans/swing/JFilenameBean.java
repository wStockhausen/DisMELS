/*
 * JFilenameBean.java
 *
 * Created on January 4, 2006, 2:57 PM
 */

package com.wtstockhausen.beans.swing;

import com.wtstockhausen.utils.FileFilterImpl;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author  William Stockhausen
 */
public class JFilenameBean extends javax.swing.JPanel {

    private boolean useRelPath=false;
    String relPath = "";
    
    private boolean showShortFilename = false;
    private List<ActionListener> actionListeners;
    private String actionCommand;
    private JFileChooser jFC;
    
    /** flag to process events */
    private boolean doEvents = true;
    
    /** Creates new form JFilenameBean */
    public JFilenameBean() {
        initComponents();
        jFC = new JFileChooser();
        actionListeners = new ArrayList();
        actionCommand = null;
    }

    public void showShortFilename(boolean b) {
        showShortFilename = b;
    }
    
    public void useRelativePath(boolean b){
        useRelPath = b;
    }
    
    public void useRelativePath(String path){
        relPath = path;
        useRelPath = true;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbGetFN = new javax.swing.JButton();
        jcbFN = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Title"));

        jbGetFN.setText("Select");
        jbGetFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGetFNActionPerformed(evt);
            }
        });

        jcbFN.setEditable(true);
        jcbFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFNActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jcbFN, 0, 318, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jbGetFN)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jcbFN, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbGetFN))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFNActionPerformed
        if (doEvents){
            if (jcbFN.getSelectedItem() instanceof String) {
                String fn = (String) jcbFN.getSelectedItem();
                fireActionEvent();
            }
        }
    }//GEN-LAST:event_jcbFNActionPerformed

    private void jbGetFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGetFNActionPerformed
        if (doEvents){
            int res = jFC.showOpenDialog(this);
            if (res==JFileChooser.APPROVE_OPTION) {
                String dsn = "";
                if (showShortFilename) {
                    dsn = jFC.getSelectedFile().getName();
                } else {
                    dsn = jFC.getSelectedFile().getPath();
                    if (useRelPath){
                        if (dsn.startsWith(relPath)){
                            dsn = dsn.substring(relPath.length());
                        }
                    }
                }

                doEvents = false;//don't want to respond to events when updating jcbFN now
                jcbFN.addItem(dsn);
                jcbFN.setSelectedItem(dsn);
                doEvents = true;//turn response back on
                fireActionEvent();
            }
        }
    }//GEN-LAST:event_jbGetFNActionPerformed
    
    public void addFileFilter(String ext) {
        FileFilter f = new FileFilterImpl(ext);
        jFC.addChoosableFileFilter(f);
    }
    
    public void addFileFilter(String ext, String descr) {
        FileFilter f = new FileFilterImpl(ext,descr);
        jFC.addChoosableFileFilter(f);
    }
    
    public void addFileFilter(String[] ext, String descr) {
        FileFilter f = new FileFilterImpl(ext,descr);
        jFC.addChoosableFileFilter(f);
    }
    
    public void clearFileFilters() {
        jFC.resetChoosableFileFilters();
    }
    
    public void setCurrentDirectory(File currdir) {
        jFC.setCurrentDirectory(currdir);
    }
    
    public String getFilename() {
        return (String)jcbFN.getSelectedItem();
    }
    
    /**
     * Sets the filename.  Fires an ActionEvent.
     * 
     * @param fn - the filename
     */
    public void setFilename(String fn) {
        if (fn!=null) {
            File file = new File(fn);
            doEvents = false;
            jFC.setSelectedFile(file);
            jcbFN.addItem(fn);
            jcbFN.setSelectedItem(fn);
            doEvents = true;
            fireActionEvent();
        }
    }
    
    public String getLabel() {
        TitledBorder tb = (TitledBorder) this.getBorder();
        return tb.getTitle();
    }
    
    public void setLabel(String label) {
        TitledBorder tb = (TitledBorder) this.getBorder();
        tb.setTitle(label);
    }
    
    public String getActionCommand() {
        return actionCommand;
    }
    
    public void setActionCommand(String newCommand) {
        actionCommand = newCommand;
    }
    
    public void addActionListener(ActionListener a) {
        actionListeners.add(a);
    }
    
    public void removeActionListener(ActionListener a) {
        actionListeners.remove(a);
    }
    
    private void fireActionEvent() {
        ActionEvent evt = new ActionEvent(this,0,actionCommand);
        Iterator<ActionListener> it = actionListeners.iterator();
        while (it.hasNext()) {
            it.next().actionPerformed(evt);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbGetFN;
    private javax.swing.JComboBox jcbFN;
    // End of variables declaration//GEN-END:variables
    
}
