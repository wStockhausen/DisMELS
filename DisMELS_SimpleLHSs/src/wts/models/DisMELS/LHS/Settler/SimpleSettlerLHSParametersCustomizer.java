/*
 * SimpleSettlerLHSParametersCustomizer.java
 *
 * Created on January 6, 2006, 11:48 AM
 */

package wts.models.DisMELS.LHS.Settler;

import wts.models.DisMELS.framework.*;
import wts.models.gui.DepthRange_JPanel;
import wts.models.DisMELS.gui.LifeStageParametersCustomizer;

/**
 * @author William Stockhausen
 */
public class SimpleSettlerLHSParametersCustomizer extends LifeStageParametersCustomizer {

    private SimpleSettlerLHSParameters parameters;
    private boolean b;
    private double d;
    private int i;

    /**
     * Creates new customizer SimpleSettlerLHSParametersCustomizer
     */
    public SimpleSettlerLHSParametersCustomizer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jcbSuperIndividual = new javax.swing.JCheckBox();
        drDayTime = new wts.models.gui.DepthRange_JPanel();
        drNightTime = new wts.models.gui.DepthRange_JPanel();
        jPanel2 = new javax.swing.JPanel();
        jtfVSS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfVertDiff = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfHorizDiff = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jtfMinSettlementDepth = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfMaxSettlementDepth = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfMaxDuration = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jtfStageTransRate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcbRandomTransitions = new javax.swing.JCheckBox();
        jtfMortalityRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcbRandomMortality = new javax.swing.JCheckBox();
        jtfGrowthRate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbRandomGrowth = new javax.swing.JCheckBox();

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jcbSuperIndividual.setText("is super-individual?");
        jcbSuperIndividual.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbSuperIndividual.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbSuperIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSuperIndividualActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jcbSuperIndividual)
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jcbSuperIndividual)
        );

        drDayTime.setTitle("Daytime");
        drDayTime.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                drDayTimePropertyChange(evt);
            }
        });

        drNightTime.setTitle("Nighttime");
        drNightTime.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                drNightTimePropertyChange(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfVSS.setText("0.0");
        jtfVSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVSSActionPerformed(evt);
            }
        });

        jLabel1.setLabelFor(jtfVSS);
        jLabel1.setText("Vertical swimming speed (m/s)");

        jtfVertDiff.setText("0.0");
        jtfVertDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVertDiffActionPerformed(evt);
            }
        });

        jLabel2.setText("Vertical diffusion (m/s^2)");

        jtfHorizDiff.setText("0.0");
        jtfHorizDiff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfHorizDiffActionPerformed(evt);
            }
        });

        jLabel9.setText("Horizontal diffusion (m^2/s)");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jtfVSS, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jtfVertDiff, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(43, 43, 43)
                .add(jtfHorizDiff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel9)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jtfVSS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfVertDiff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .add(jLabel9)
                    .add(jtfHorizDiff, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfMinSettlementDepth.setText("0.0");
        jtfMinSettlementDepth.setToolTipText("minimum depth in which to settle");
        jtfMinSettlementDepth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMinSettlementDepthActionPerformed(evt);
            }
        });

        jLabel3.setText("Min settlement depth (m)");

        jtfMaxSettlementDepth.setText("10000");
        jtfMaxSettlementDepth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMaxSettlementDepthActionPerformed(evt);
            }
        });

        jLabel4.setText("Max settlement depth (m)");

        jtfMaxDuration.setText("0.0");
        jtfMaxDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMaxDurationActionPerformed(evt);
            }
        });

        jLabel8.setText("Max stage duration (d)");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jtfMinSettlementDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .add(85, 85, 85)
                        .add(jtfMaxDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(5, 5, 5)
                        .add(jLabel8))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jtfMaxSettlementDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4)))
                .add(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMinSettlementDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jtfMaxDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMaxSettlementDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfStageTransRate.setText("0.0");
        jtfStageTransRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfStageTransRateActionPerformed(evt);
            }
        });

        jLabel7.setText("Trans. rate (1/d)");

        jcbRandomTransitions.setText("use random transitions?");
        jcbRandomTransitions.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomTransitions.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomTransitions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomTransitionsActionPerformed(evt);
            }
        });

        jtfMortalityRate.setText("0.0");
        jtfMortalityRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMortalityRateActionPerformed(evt);
            }
        });

        jLabel6.setText("Mortality rate (1/d)");

        jcbRandomMortality.setText("use random mortality?");
        jcbRandomMortality.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomMortality.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomMortality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomMortalityActionPerformed(evt);
            }
        });

        jtfGrowthRate.setText("0.0");
        jtfGrowthRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfGrowthRateActionPerformed(evt);
            }
        });

        jLabel5.setText("Growth rate (1/d)");

        jcbRandomGrowth.setText("use random growth?");
        jcbRandomGrowth.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomGrowth.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomGrowth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomGrowthActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jtfMortalityRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jtfStageTransRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel7))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jtfGrowthRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(86, 86, 86)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jcbRandomTransitions)
                    .add(jcbRandomGrowth)
                    .add(jcbRandomMortality))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfStageTransRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMortalityRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfGrowthRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)))
            .add(jPanel7Layout.createSequentialGroup()
                .add(jcbRandomTransitions)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jcbRandomMortality)
                .add(12, 12, 12)
                .add(jcbRandomGrowth))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                        .add(drDayTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 247, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(drNightTime, 0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(drDayTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(drNightTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfMaxDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMaxDurationActionPerformed
        parameters.setValue(parameters.PROP_maxStageDuration,Double.parseDouble(jtfMaxDuration.getText()));
}//GEN-LAST:event_jtfMaxDurationActionPerformed

    private void jtfStageTransRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfStageTransRateActionPerformed
        parameters.setValue(parameters.PROP_stageTransRate,Double.parseDouble(jtfStageTransRate.getText()));
    }//GEN-LAST:event_jtfStageTransRateActionPerformed

    private void jcbRandomGrowthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomGrowthActionPerformed
        parameters.setValue(parameters.PROP_useRandomGrowth,jcbRandomGrowth.isSelected());
    }//GEN-LAST:event_jcbRandomGrowthActionPerformed

    private void jcbRandomMortalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomMortalityActionPerformed
        parameters.setValue(parameters.PROP_useRandomMortality,jcbRandomMortality.isSelected());
    }//GEN-LAST:event_jcbRandomMortalityActionPerformed

    private void jcbRandomTransitionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomTransitionsActionPerformed
        parameters.setValue(parameters.PROP_useRandomTransitions,jcbRandomTransitions.isSelected());
    }//GEN-LAST:event_jcbRandomTransitionsActionPerformed

    private void jcbSuperIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSuperIndividualActionPerformed
        parameters.setValue(parameters.PROP_isSuperIndividual,jcbSuperIndividual.isSelected());
    }//GEN-LAST:event_jcbSuperIndividualActionPerformed

    private void jtfMortalityRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMortalityRateActionPerformed
        parameters.setValue(parameters.PROP_mortalityRate,Double.parseDouble(jtfMortalityRate.getText()));
    }//GEN-LAST:event_jtfMortalityRateActionPerformed

    private void jtfGrowthRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfGrowthRateActionPerformed
        parameters.setValue(parameters.PROP_growthRate,Double.parseDouble(jtfGrowthRate.getText()));
    }//GEN-LAST:event_jtfGrowthRateActionPerformed

    private void jtfMaxSettlementDepthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMaxSettlementDepthActionPerformed
        parameters.setValue(parameters.PROP_maxSettlementDepth,Double.parseDouble(jtfMaxSettlementDepth.getText()));
}//GEN-LAST:event_jtfMaxSettlementDepthActionPerformed

    private void jtfMinSettlementDepthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMinSettlementDepthActionPerformed
        parameters.setValue(parameters.PROP_minSettlementDepth,Double.parseDouble(jtfMinSettlementDepth.getText()));
}//GEN-LAST:event_jtfMinSettlementDepthActionPerformed

    private void jtfVertDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVertDiffActionPerformed
        parameters.setValue(parameters.PROP_vertDiffusion,Double.parseDouble(jtfVertDiff.getText()));
    }//GEN-LAST:event_jtfVertDiffActionPerformed

    private void jtfVSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVSSActionPerformed
        parameters.setValue(parameters.PROP_vertSwimmingSpeed,Double.parseDouble(jtfVSS.getText()));
    }//GEN-LAST:event_jtfVSSActionPerformed

    private void drNightTimePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_drNightTimePropertyChange
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_hasPreferredRange)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_hasPreferredDepthNight,b);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_maxDepth)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_maxDepthNight,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_minDepth)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_minDepthNight,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_willAttach)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_willAttachNight,b);
            }
        }
    }//GEN-LAST:event_drNightTimePropertyChange

    private void drDayTimePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_drDayTimePropertyChange
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_hasPreferredRange)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_hasPreferredDepthDay,b);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_maxDepth)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_maxDepthDay,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_minDepth)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_minDepthDay,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(DepthRange_JPanel.PROP_willAttach)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_willAttachDay,b);
            }
        }
    }//GEN-LAST:event_drDayTimePropertyChange

    private void jtfHorizDiffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfHorizDiffActionPerformed
        parameters.setValue(parameters.PROP_horizDiffusion,Double.parseDouble(jtfHorizDiff.getText()));
    }//GEN-LAST:event_jtfHorizDiffActionPerformed

    @Override
    public void setObject(Object bean) {
        if (bean instanceof SimpleSettlerLHSParameters) {
            setParameters((SimpleSettlerLHSParameters) bean);
        }
    }
    
    private void setParameters(LifeStageParametersInterface newParams) {
        if (newParams instanceof SimpleSettlerLHSParameters) {
            parameters = (SimpleSettlerLHSParameters) newParams;
            jcbSuperIndividual.setSelected(parameters.getValue(parameters.PROP_isSuperIndividual,b));
            drDayTime.setHasPreferredRange(parameters.getValue(parameters.PROP_hasPreferredDepthDay,b));
            drDayTime.setMaxDepth(parameters.getValue(parameters.PROP_maxDepthDay,d));
            drDayTime.setMinDepth(parameters.getValue(parameters.PROP_minDepthDay,d));
            drDayTime.setWillAttach(parameters.getValue(parameters.PROP_willAttachDay,b));
            drNightTime.setHasPreferredRange(parameters.getValue(parameters.PROP_hasPreferredDepthNight,b));
            drNightTime.setMaxDepth(parameters.getValue(parameters.PROP_maxDepthNight,d));
            drNightTime.setMinDepth(parameters.getValue(parameters.PROP_minDepthNight,d));
            drNightTime.setWillAttach(parameters.getValue(parameters.PROP_willAttachNight,b));
            jtfVSS.setText(String.valueOf(parameters.getValue(parameters.PROP_vertSwimmingSpeed,d)));
            jtfVertDiff.setText(String.valueOf(parameters.getValue(parameters.PROP_vertDiffusion,d)));
            jtfHorizDiff.setText(String.valueOf(parameters.getValue(parameters.PROP_horizDiffusion,d)));
            jtfMaxDuration.setText(String.valueOf(parameters.getValue(parameters.PROP_maxStageDuration,d)));
            jtfMinSettlementDepth.setText(String.valueOf(parameters.getValue(parameters.PROP_minSettlementDepth,d)));
            jtfMaxSettlementDepth.setText(String.valueOf(parameters.getValue(parameters.PROP_maxSettlementDepth,d)));
            jtfStageTransRate.setText(String.valueOf(parameters.getValue(parameters.PROP_stageTransRate,d)));
            jtfGrowthRate.setText(String.valueOf(parameters.getValue(parameters.PROP_growthRate,d)));
            jtfMortalityRate.setText(String.valueOf(parameters.getValue(parameters.PROP_mortalityRate,d)));
            jcbRandomGrowth.setSelected(parameters.getValue(parameters.PROP_useRandomGrowth,b));
            jcbRandomMortality.setSelected(parameters.getValue(parameters.PROP_useRandomMortality,b));
            jcbRandomTransitions.setSelected(parameters.getValue(parameters.PROP_useRandomTransitions,b));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private wts.models.gui.DepthRange_JPanel drDayTime;
    private wts.models.gui.DepthRange_JPanel drNightTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JCheckBox jcbRandomGrowth;
    private javax.swing.JCheckBox jcbRandomMortality;
    private javax.swing.JCheckBox jcbRandomTransitions;
    private javax.swing.JCheckBox jcbSuperIndividual;
    private javax.swing.JTextField jtfGrowthRate;
    private javax.swing.JTextField jtfHorizDiff;
    private javax.swing.JTextField jtfMaxDuration;
    private javax.swing.JTextField jtfMaxSettlementDepth;
    private javax.swing.JTextField jtfMinSettlementDepth;
    private javax.swing.JTextField jtfMortalityRate;
    private javax.swing.JTextField jtfStageTransRate;
    private javax.swing.JTextField jtfVSS;
    private javax.swing.JTextField jtfVertDiff;
    // End of variables declaration//GEN-END:variables

}
