/*
 * SimpleBenthicAdultLHSParametersCustomizer.java
 *
 * Created on January 6, 2006, 11:48 AM
 */

package wts.models.DisMELS.LHS.BenthicAdult;

import wts.models.DisMELS.framework.*;
import wts.models.DisMELS.gui.LifeStageParametersCustomizer;

/**
 * @author William Stockhausen
 */
public class SimpleBenthicAdultLHSParametersCustomizer extends LifeStageParametersCustomizer {

    private SimpleBenthicAdultLHSParameters parameters;
    private boolean b;
    private double d;
    private int i;

    /**
     * Creates new customizer SimpleBenthicAdultLHSParametersCustomizer
     */
    public SimpleBenthicAdultLHSParametersCustomizer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jtfMinDuration = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfMaxDuration = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfMinSize = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jtfMinDepth = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfMaxDepth = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jtfHorizDiffusion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jcbSuperIndividual = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jtfStageTransRate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcbRandomTransitions = new javax.swing.JCheckBox();
        jtfMortalityRate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcbRandomMortality = new javax.swing.JCheckBox();
        jtfGrowthRate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbRandomGrowth = new javax.swing.JCheckBox();
        spawningParametersCustomizer1 = new wts.models.DisMELS.LHS.BenthicAdult.SpawningParametersCustomizer();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfMinDuration.setText("0.0");
        jtfMinDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMinDurationActionPerformed(evt);
            }
        });

        jLabel3.setText("Min stage duration (d)");

        jtfMaxDuration.setText("365");
        jtfMaxDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMaxDurationActionPerformed(evt);
            }
        });

        jLabel4.setText("Max stage duration (d)");

        jtfMinSize.setText("0.0");
        jtfMinSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMinSizeActionPerformed(evt);
            }
        });

        jLabel8.setText("Min size at stage transition (cm)");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jtfMinDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .add(92, 92, 92)
                        .add(jtfMaxDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jtfMinSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel8)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMinDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMinSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)))
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jtfMaxDuration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel4))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfMinDepth.setText("0.0");
        jtfMinDepth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMinDepthActionPerformed(evt);
            }
        });

        jLabel9.setText("Min depth (m)");

        jtfMaxDepth.setText("365");
        jtfMaxDepth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMaxDepthActionPerformed(evt);
            }
        });

        jLabel10.setText("Max depth (m)");

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jtfMinDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel9)
                .add(138, 138, 138)
                .add(jtfMaxDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel10)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jtfMinDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel9)
                .add(jtfMaxDepth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel10))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfHorizDiffusion.setText("0.0");
        jtfHorizDiffusion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfHorizDiffusionActionPerformed(evt);
            }
        });

        jLabel11.setText("Horizontal diffusion (m^2/s)");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jtfHorizDiffusion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel11)
                .addContainerGap(248, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jtfHorizDiffusion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel11))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jcbSuperIndividual.setText("is super-individual?");
        jcbSuperIndividual.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbSuperIndividual.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbSuperIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSuperIndividualActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jcbSuperIndividual)
                .addContainerGap(330, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jcbSuperIndividual)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jtfStageTransRate.setText("0.0");
        jtfStageTransRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfStageTransRateActionPerformed(evt);
            }
        });

        jLabel7.setText("Trans. rate (1/d)");

        jcbRandomTransitions.setText("use random transitions?");
        jcbRandomTransitions.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomTransitions.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomTransitions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomTransitionsActionPerformed(evt);
            }
        });

        jtfMortalityRate.setText("0.0");
        jtfMortalityRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMortalityRateActionPerformed(evt);
            }
        });

        jLabel6.setText("Mortality rate (1/d)");

        jcbRandomMortality.setText("use random mortality?");
        jcbRandomMortality.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomMortality.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomMortality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomMortalityActionPerformed(evt);
            }
        });

        jtfGrowthRate.setText("0.0");
        jtfGrowthRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfGrowthRateActionPerformed(evt);
            }
        });

        jLabel5.setText("Growth rate (1/d)");

        jcbRandomGrowth.setText("use random growth?");
        jcbRandomGrowth.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jcbRandomGrowth.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jcbRandomGrowth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRandomGrowthActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jtfStageTransRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel7))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jtfMortalityRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel6))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jtfGrowthRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(78, 78, 78)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jcbRandomGrowth)
                    .add(jcbRandomTransitions)
                    .add(jcbRandomMortality))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfStageTransRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7)
                    .add(jcbRandomTransitions))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfMortalityRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(jcbRandomMortality))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtfGrowthRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(jcbRandomGrowth)))
        );

        spawningParametersCustomizer1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spawningParametersCustomizer1PropertyChange(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(spawningParametersCustomizer1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(spawningParametersCustomizer1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfMinSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMinSizeActionPerformed
        parameters.setValue(parameters.PROP_minStageSize,Double.parseDouble(jtfMinSize.getText()));
    }//GEN-LAST:event_jtfMinSizeActionPerformed

    private void jtfStageTransRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfStageTransRateActionPerformed
        parameters.setValue(parameters.PROP_stageTransRate,Double.parseDouble(jtfStageTransRate.getText()));
    }//GEN-LAST:event_jtfStageTransRateActionPerformed

    private void jcbRandomGrowthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomGrowthActionPerformed
        parameters.setValue(parameters.PROP_useRandomGrowth,jcbRandomGrowth.isSelected());
    }//GEN-LAST:event_jcbRandomGrowthActionPerformed

    private void jcbRandomMortalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomMortalityActionPerformed
        parameters.setValue(parameters.PROP_useRandomMortality,jcbRandomMortality.isSelected());
    }//GEN-LAST:event_jcbRandomMortalityActionPerformed

    private void jcbRandomTransitionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRandomTransitionsActionPerformed
        parameters.setValue(parameters.PROP_useRandomTransitions,jcbRandomTransitions.isSelected());
    }//GEN-LAST:event_jcbRandomTransitionsActionPerformed

    private void jcbSuperIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSuperIndividualActionPerformed
        parameters.setValue(parameters.PROP_isSuperIndividual,jcbSuperIndividual.isSelected());
    }//GEN-LAST:event_jcbSuperIndividualActionPerformed

    private void jtfMortalityRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMortalityRateActionPerformed
        parameters.setValue(parameters.PROP_mortalityRate,Double.parseDouble(jtfMortalityRate.getText()));
    }//GEN-LAST:event_jtfMortalityRateActionPerformed

    private void jtfGrowthRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfGrowthRateActionPerformed
        parameters.setValue(parameters.PROP_growthRate,Double.parseDouble(jtfGrowthRate.getText()));
    }//GEN-LAST:event_jtfGrowthRateActionPerformed

    private void jtfMaxDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMaxDurationActionPerformed
        parameters.setValue(parameters.PROP_maxStageDuration,Double.parseDouble(jtfMaxDuration.getText()));
    }//GEN-LAST:event_jtfMaxDurationActionPerformed

    private void jtfMinDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMinDurationActionPerformed
        parameters.setValue(parameters.PROP_minStageDuration,Double.parseDouble(jtfMinDuration.getText()));
    }//GEN-LAST:event_jtfMinDurationActionPerformed

    private void jtfMinDepthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMinDepthActionPerformed
        parameters.setValue(parameters.PROP_minDepth,Double.parseDouble(jtfMinDepth.getText()));
}//GEN-LAST:event_jtfMinDepthActionPerformed

    private void jtfMaxDepthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMaxDepthActionPerformed
        parameters.setValue(parameters.PROP_maxDepth,Double.parseDouble(jtfMaxDepth.getText()));
}//GEN-LAST:event_jtfMaxDepthActionPerformed

    private void jtfHorizDiffusionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfHorizDiffusionActionPerformed
        parameters.setValue(parameters.PROP_horizDiffusion,Double.parseDouble(jtfHorizDiffusion.getText()));
}//GEN-LAST:event_jtfHorizDiffusionActionPerformed

    private void spawningParametersCustomizer1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spawningParametersCustomizer1PropertyChange
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_batchPeriod)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_batchPeriod,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_batchSpawner)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_isBatchSpawner,b);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_duration)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_lengthSpawningSeason,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_fecundity)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_fecundity,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_firstDay)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_firstDaySpawning,d);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_randomizedSpawning)) {
            if (evt.getNewValue() instanceof Boolean) {
                Boolean b = ((Boolean)evt.getNewValue());
                parameters.setValue(parameters.PROP_useRandomSpawning,b);
            }
        } else
        if (evt.getPropertyName().equalsIgnoreCase(spawningParametersCustomizer1.PROP_recoveryPeriod)) {
            if (evt.getNewValue() instanceof Double) {
                Double d = ((Double)evt.getNewValue());
                parameters.setValue(parameters.PROP_recoveryPeriod,d);
            }
        }

    }//GEN-LAST:event_spawningParametersCustomizer1PropertyChange

    @Override
    public void setObject(Object bean) {
        if (bean instanceof SimpleBenthicAdultLHSParameters) {
            setParameters((SimpleBenthicAdultLHSParameters) bean);
        }
    }

    private void setParameters(LifeStageParametersInterface newParams) {
        if (newParams instanceof SimpleBenthicAdultLHSParameters) {
            parameters = (SimpleBenthicAdultLHSParameters) newParams;
            jcbSuperIndividual.setSelected(parameters.getValue(parameters.PROP_isSuperIndividual,b));
            jtfMinDuration.setText(String.valueOf(parameters.getValue(parameters.PROP_minStageDuration,d)));
            jtfMaxDuration.setText(String.valueOf(parameters.getValue(parameters.PROP_maxStageDuration,d)));
            jtfMinSize.setText(String.valueOf(parameters.getValue(parameters.PROP_minStageSize,d)));
            jtfMinDepth.setText(String.valueOf(parameters.getValue(parameters.PROP_minDepth,d)));
            jtfMaxDepth.setText(String.valueOf(parameters.getValue(parameters.PROP_maxDepth,d)));
            jtfHorizDiffusion.setText(String.valueOf(parameters.getValue(parameters.PROP_horizDiffusion,d)));
            jtfStageTransRate.setText(String.valueOf(parameters.getValue(parameters.PROP_stageTransRate,d)));
            jtfGrowthRate.setText(String.valueOf(parameters.getValue(parameters.PROP_growthRate,d)));
            jtfMortalityRate.setText(String.valueOf(parameters.getValue(parameters.PROP_mortalityRate,d)));
            jcbRandomGrowth.setSelected(parameters.getValue(parameters.PROP_useRandomGrowth,b));
            jcbRandomMortality.setSelected(parameters.getValue(parameters.PROP_useRandomMortality,b));
            jcbRandomTransitions.setSelected(parameters.getValue(parameters.PROP_useRandomTransitions,b));
            
            spawningParametersCustomizer1.setBatchPeriod(parameters.getValue(parameters.PROP_batchPeriod,d));
            spawningParametersCustomizer1.setBatchSpawner(parameters.getValue(parameters.PROP_isBatchSpawner,b));
            spawningParametersCustomizer1.setDuration(parameters.getValue(parameters.PROP_lengthSpawningSeason,d));
            spawningParametersCustomizer1.setFecundity(parameters.getValue(parameters.PROP_fecundity,d));
            spawningParametersCustomizer1.setFirstDay(parameters.getValue(parameters.PROP_firstDaySpawning,d));
            spawningParametersCustomizer1.setRandomizedSpawning(parameters.getValue(parameters.PROP_useRandomSpawning,b));
            spawningParametersCustomizer1.setRecoveryPeriod(parameters.getValue(parameters.PROP_recoveryPeriod,d));
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox jcbRandomGrowth;
    private javax.swing.JCheckBox jcbRandomMortality;
    private javax.swing.JCheckBox jcbRandomTransitions;
    private javax.swing.JCheckBox jcbSuperIndividual;
    private javax.swing.JTextField jtfGrowthRate;
    private javax.swing.JTextField jtfHorizDiffusion;
    private javax.swing.JTextField jtfMaxDepth;
    private javax.swing.JTextField jtfMaxDuration;
    private javax.swing.JTextField jtfMinDepth;
    private javax.swing.JTextField jtfMinDuration;
    private javax.swing.JTextField jtfMinSize;
    private javax.swing.JTextField jtfMortalityRate;
    private javax.swing.JTextField jtfStageTransRate;
    private wts.models.DisMELS.LHS.BenthicAdult.SpawningParametersCustomizer spawningParametersCustomizer1;
    // End of variables declaration//GEN-END:variables

}
